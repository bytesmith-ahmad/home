#!/bin/bash

# Function to print an error message and exit
error_exit() {
    echo -e "\033[31mError: $1\033[0m" >&2
    exit 1
}

# Function to print a warning message
warning_message() {
    echo -e "\033[33mWarning: $1\033[0m" >&2
}

# Function to print a success message
success_message() {
    echo -e "\033[32mSuccess: $1\033[0m" >&2
}

# Function to print usage message
print_usage() {
    echo -e "\033[34mUsage: destroy <file_path>\033[0m" >&2
}

# Validate the argument and get the file size
validate_and_get_size() {
    local file_path="$1"

    # Check if the file exists
    [ -e "$file_path" ] || { error_exit "File '$file_path' does not exist."; return 1; }

    # Get the size of the file in bytes
    local file_size=$(du -sh "$file_path" | cut -f1)

    echo "$file_size"
}

# Main script

# Check if an argument is provided
if [ $# -eq 0 ]; then
    print_usage
    exit 1  # Exit the script if no argument is provided
fi

file_path="$1"

# Validate the file path and get its size
if ! file_size=$(validate_and_get_size "$file_path"); then
    exit 1
fi

# Prompt the user for confirmation
read -rp "Are you sure you want to destroy '$file_path' which contains $file_size? (Y/N): " answer

# Check if the answer is yes
if [[ "$answer" =~ ^[Yy]$ ]]; then
    # Remove the file
    rm -rfv "$file_path" && success_message "'$file_path' has been destroyed."
else
    warning_message "Operation aborted."
    exit 1
fi
